import Unit from "../models/Unit.js";

/**
 * POST /convert
 * Nh·∫≠n ƒë·ªãa ch·ªâ 3 c·∫•p -> Chu·∫©n h√≥a v√† tra c·ª©u tr·ª±c ti·∫øp t·ª´ MongoDB
 */
export async function convertAddress(req, res) {
  try {
    const { address } = req.body;
    if (!address) {
      return res.status(400).json({ error: "Thi·∫øu ƒë·ªãa ch·ªâ c·∫ßn chuy·ªÉn ƒë·ªïi" });
    }

    // üß© Chu·∫©n h√≥a & t√°ch ƒë·ªãa ch·ªâ (VD: "T·ªânh H√† N·ªôi, Huy·ªán Ho√†n Ki·∫øm, X√£ H√†ng Tr·ªëng")
    const parts = address.split(",").map(p => p.trim());
    if (parts.length < 3) {
      return res.status(400).json({
        error: "ƒê·ªãa ch·ªâ ph·∫£i c√≥ √≠t nh·∫•t 3 c·∫•p (T·ªânh, Huy·ªán, X√£/Ph∆∞·ªùng/Th·ªã tr·∫•n)",
      });
    }

    const [provinceName, districtName, communeName] = parts;

    // üß† L√†m s·∫°ch ti·ªÅn t·ªë ph·ªï bi·∫øn trong ti·∫øng Vi·ªát
    const clean = (text) =>
      text
        .replace(/T·ªânh|Th√†nh ph·ªë|TP\.?|Huy·ªán|Qu·∫≠n|Th·ªã x√£|X√£|Ph∆∞·ªùng|Th·ªã tr·∫•n/gi, "")
        .trim();

    // --- T√¨m t·ªânh ---
    const province = await Unit.findOne({
      name: { $regex: clean(provinceName), $options: "i" },
      level: "province",
    });

    // --- T√¨m huy·ªán thu·ªôc t·ªânh ---
    const district = province
      ? await Unit.findOne({
          name: { $regex: clean(districtName), $options: "i" },
          level: "district",
          parentCode: province.code,
        })
      : null;

    // --- T√¨m x√£ thu·ªôc huy·ªán ---
    const commune = district
      ? await Unit.findOne({
          name: { $regex: clean(communeName), $options: "i" },
          level: "commune",
          parentCode: district.code,
        })
      : null;

    // --- Tr·∫£ v·ªÅ k·∫øt qu·∫£ ---
    res.json({
      original: address,
      matched: {
        province: province?.name || null,
        district: district?.name || null,
        commune: commune?.name || null,
      },
      codes: {
        province: province?.code || null,
        district: district?.code || null,
        commune: commune?.code || null,
      },
      found: !!(province || district || commune),
    });
  } catch (err) {
    console.error("‚ùå Convert Error:", err);
    res.status(500).json({ error: "Internal Server Error" });
  }
}
